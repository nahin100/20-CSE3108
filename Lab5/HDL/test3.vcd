$date
	Fri Sep 27 19:12:01 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_tb $end
$var wire 3 ! REG3 [2:0] $end
$var wire 3 " REG2 [2:0] $end
$var wire 3 # REG1 [2:0] $end
$var wire 3 $ REG0 [2:0] $end
$var wire 9 % RAM7 [8:0] $end
$var wire 9 & RAM6 [8:0] $end
$var wire 9 ' RAM5 [8:0] $end
$var wire 9 ( RAM4 [8:0] $end
$var wire 9 ) RAM3 [8:0] $end
$var wire 9 * RAM2 [8:0] $end
$var wire 9 + RAM1 [8:0] $end
$var wire 9 , RAM0 [8:0] $end
$var wire 9 - PI [8:0] $end
$var wire 3 . PC [2:0] $end
$var wire 3 / OutD [2:0] $end
$var reg 3 0 InD [2:0] $end
$var reg 1 1 InE $end
$var reg 1 2 PC_Enable $end
$var reg 3 3 RAM_Write_Address [2:0] $end
$var reg 9 4 RAM_Write_Data [8:0] $end
$var reg 1 5 RAM_Write_Enable $end
$var reg 1 6 clk $end
$var reg 1 7 reset $end
$scope module uut $end
$var wire 1 8 CPU_CLK $end
$var wire 3 9 InD [2:0] $end
$var wire 1 1 InE $end
$var wire 3 : PC [2:0] $end
$var wire 1 2 PC_Enable $end
$var wire 9 ; PI [8:0] $end
$var wire 3 < RAM_Write_Address [2:0] $end
$var wire 9 = RAM_Write_Data [8:0] $end
$var wire 1 5 RAM_Write_Enable $end
$var wire 3 > ST_ADDR [2:0] $end
$var wire 3 ? ST_DATA [2:0] $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 @ dZF $end
$var wire 1 A dSF $end
$var wire 1 B dCF $end
$var wire 1 C ZF $end
$var wire 1 D Write_Enable $end
$var wire 9 E Write_Data [8:0] $end
$var wire 3 F Write_Address [2:0] $end
$var wire 2 G WR [1:0] $end
$var wire 1 H ST_SEL $end
$var wire 1 I SF $end
$var wire 1 J REG_EN $end
$var wire 3 K REG3 [2:0] $end
$var wire 3 L REG2 [2:0] $end
$var wire 3 M REG1 [2:0] $end
$var wire 3 N REG0 [2:0] $end
$var wire 2 O RB [1:0] $end
$var wire 9 P RAM7 [8:0] $end
$var wire 9 Q RAM6 [8:0] $end
$var wire 9 R RAM5 [8:0] $end
$var wire 9 S RAM4 [8:0] $end
$var wire 9 T RAM3 [8:0] $end
$var wire 9 U RAM2 [8:0] $end
$var wire 9 V RAM1 [8:0] $end
$var wire 9 W RAM0 [8:0] $end
$var wire 2 X RA [1:0] $end
$var wire 3 Y R [2:0] $end
$var wire 9 Z Program_Instruction [8:0] $end
$var wire 3 [ Program_Address [2:0] $end
$var wire 3 \ OutD [2:0] $end
$var wire 4 ] Opcode [3:0] $end
$var wire 2 ^ OP [1:0] $end
$var wire 3 _ Next_Program_Address [2:0] $end
$var wire 1 ` JMP_SEL $end
$var wire 3 a JMP_ADDR [2:0] $end
$var wire 1 b IMM_SEL $end
$var wire 3 c IMM_DATA [2:0] $end
$var wire 1 d CF $end
$var wire 3 e B_Final [2:0] $end
$var wire 3 f B [2:0] $end
$var wire 3 g A [2:0] $end
$scope module ALU_circuit1 $end
$var wire 3 h B [2:0] $end
$var wire 1 C ZF $end
$var wire 1 I SF $end
$var wire 3 i R_SHL [2:0] $end
$var wire 3 j R_ADD_SUB [2:0] $end
$var wire 2 k OP [1:0] $end
$var wire 1 l CF_ADD_SUB $end
$var wire 1 d CF $end
$var wire 3 m A [2:0] $end
$var reg 3 n R [2:0] $end
$var reg 1 o Sel $end
$scope module ADD_SUB1 $end
$var wire 3 p B [2:0] $end
$var wire 1 o Sel $end
$var wire 3 q R [2:0] $end
$var wire 1 l CF $end
$var wire 3 r B_selected [2:0] $end
$var wire 3 s B_complement [2:0] $end
$var wire 3 t A [2:0] $end
$upscope $end
$scope module SHL1 $end
$var wire 3 u B [2:0] $end
$var wire 2 v B2bit [1:0] $end
$var wire 3 w A [2:0] $end
$var reg 3 x R [2:0] $end
$upscope $end
$upscope $end
$scope module CU_circuit1 $end
$var wire 4 y Opcode [3:0] $end
$var wire 1 @ ZF $end
$var wire 1 H ST_SEL $end
$var wire 1 A SF $end
$var wire 1 J REG_EN $end
$var wire 2 z OP [1:0] $end
$var wire 1 ` JMP_SEL $end
$var wire 1 b IMM_SEL $end
$var wire 1 B CF $end
$upscope $end
$scope module FLAG_circuit1 $end
$var wire 1 d CF $end
$var wire 1 I SF $end
$var wire 1 C ZF $end
$var wire 1 8 clk $end
$var wire 1 B dCF $end
$var wire 1 A dSF $end
$var wire 1 @ dZF $end
$var wire 1 7 reset $end
$var reg 1 { CF_DFF $end
$var reg 1 A SF_DFF $end
$var reg 1 @ ZF_DFF $end
$upscope $end
$scope module PC_circuit1 $end
$var wire 3 | I [2:0] $end
$var wire 3 } O [2:0] $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 3 ~ DFF [2:0] $end
$upscope $end
$scope module RAM_circuit1 $end
$var wire 9 !" RAMrow0 [8:0] $end
$var wire 9 "" RAMrow1 [8:0] $end
$var wire 9 #" RAMrow2 [8:0] $end
$var wire 9 $" RAMrow3 [8:0] $end
$var wire 9 %" RAMrow4 [8:0] $end
$var wire 9 &" RAMrow5 [8:0] $end
$var wire 9 '" RAMrow6 [8:0] $end
$var wire 9 (" RAMrow7 [8:0] $end
$var wire 3 )" Read_Address_1 [2:0] $end
$var wire 3 *" Read_Address_2 [2:0] $end
$var wire 9 +" Read_Data_1 [8:0] $end
$var wire 9 ," Read_Data_2 [8:0] $end
$var wire 3 -" Write_Address [2:0] $end
$var wire 9 ." Write_Data [8:0] $end
$var wire 1 D Write_Enable $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 /" RD2_row7 [8:0] $end
$var wire 9 0" RD2_row6 [8:0] $end
$var wire 9 1" RD2_row5 [8:0] $end
$var wire 9 2" RD2_row4 [8:0] $end
$var wire 9 3" RD2_row3 [8:0] $end
$var wire 9 4" RD2_row2 [8:0] $end
$var wire 9 5" RD2_row1 [8:0] $end
$var wire 9 6" RD2_row0 [8:0] $end
$var wire 9 7" RD1_row7 [8:0] $end
$var wire 9 8" RD1_row6 [8:0] $end
$var wire 9 9" RD1_row5 [8:0] $end
$var wire 9 :" RD1_row4 [8:0] $end
$var wire 9 ;" RD1_row3 [8:0] $end
$var wire 9 <" RD1_row2 [8:0] $end
$var wire 9 =" RD1_row1 [8:0] $end
$var wire 9 >" RD1_row0 [8:0] $end
$var wire 9 ?" RAM_row7 [8:0] $end
$var wire 9 @" RAM_row6 [8:0] $end
$var wire 9 A" RAM_row5 [8:0] $end
$var wire 9 B" RAM_row4 [8:0] $end
$var wire 9 C" RAM_row3 [8:0] $end
$var wire 9 D" RAM_row2 [8:0] $end
$var wire 9 E" RAM_row1 [8:0] $end
$var wire 9 F" RAM_row0 [8:0] $end
$var reg 8 G" RD1_SEL [7:0] $end
$var reg 8 H" RD2_SEL [7:0] $end
$var reg 8 I" WR_SEL [7:0] $end
$scope module ram_row0 $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 9 L" Write_Data [8:0] $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 N" Read_Data_2 [8:0] $end
$var wire 9 O" Read_Data_1 [8:0] $end
$var wire 9 P" RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 Q" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 R" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 S" Read_Data_2 $end
$var wire 1 T" Read_Data_1 $end
$var reg 1 U" DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 V" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 W" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 X" Read_Data_2 $end
$var wire 1 Y" Read_Data_1 $end
$var reg 1 Z" DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 [" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 \" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ]" Read_Data_2 $end
$var wire 1 ^" Read_Data_1 $end
$var reg 1 _" DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 `" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 a" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 b" Read_Data_2 $end
$var wire 1 c" Read_Data_1 $end
$var reg 1 d" DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 e" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 f" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 g" Read_Data_2 $end
$var wire 1 h" Read_Data_1 $end
$var reg 1 i" DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 j" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 k" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 l" Read_Data_2 $end
$var wire 1 m" Read_Data_1 $end
$var reg 1 n" DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 o" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 p" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 q" Read_Data_2 $end
$var wire 1 r" Read_Data_1 $end
$var reg 1 s" DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 t" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 u" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 v" Read_Data_2 $end
$var wire 1 w" Read_Data_1 $end
$var reg 1 x" DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 y" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 z" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 {" Read_Data_2 $end
$var wire 1 |" Read_Data_1 $end
$var reg 1 }" DFF $end
$upscope $end
$upscope $end
$scope module ram_row1 $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 9 "# Write_Data [8:0] $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 $# Read_Data_2 [8:0] $end
$var wire 9 %# Read_Data_1 [8:0] $end
$var wire 9 &# RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 '# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 (# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 )# Read_Data_2 $end
$var wire 1 *# Read_Data_1 $end
$var reg 1 +# DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 ,# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 -# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 .# Read_Data_2 $end
$var wire 1 /# Read_Data_1 $end
$var reg 1 0# DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 1# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 2# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 3# Read_Data_2 $end
$var wire 1 4# Read_Data_1 $end
$var reg 1 5# DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 6# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 7# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 8# Read_Data_2 $end
$var wire 1 9# Read_Data_1 $end
$var reg 1 :# DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 ;# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 <# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 =# Read_Data_2 $end
$var wire 1 ># Read_Data_1 $end
$var reg 1 ?# DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 @# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 A# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 B# Read_Data_2 $end
$var wire 1 C# Read_Data_1 $end
$var reg 1 D# DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 E# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 F# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 G# Read_Data_2 $end
$var wire 1 H# Read_Data_1 $end
$var reg 1 I# DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 J# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 K# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 L# Read_Data_2 $end
$var wire 1 M# Read_Data_1 $end
$var reg 1 N# DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 O# RAM1bit_data $end
$var wire 1 ~" Read_Select_1 $end
$var wire 1 !# Read_Select_2 $end
$var wire 1 P# Write_Data $end
$var wire 1 ## Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Q# Read_Data_2 $end
$var wire 1 R# Read_Data_1 $end
$var reg 1 S# DFF $end
$upscope $end
$upscope $end
$scope module ram_row2 $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 9 V# Write_Data [8:0] $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 X# Read_Data_2 [8:0] $end
$var wire 9 Y# Read_Data_1 [8:0] $end
$var wire 9 Z# RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 [# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 \# Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ]# Read_Data_2 $end
$var wire 1 ^# Read_Data_1 $end
$var reg 1 _# DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 `# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 a# Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 b# Read_Data_2 $end
$var wire 1 c# Read_Data_1 $end
$var reg 1 d# DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 e# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 f# Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 g# Read_Data_2 $end
$var wire 1 h# Read_Data_1 $end
$var reg 1 i# DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 j# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 k# Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 l# Read_Data_2 $end
$var wire 1 m# Read_Data_1 $end
$var reg 1 n# DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 o# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 p# Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 q# Read_Data_2 $end
$var wire 1 r# Read_Data_1 $end
$var reg 1 s# DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 t# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 u# Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 v# Read_Data_2 $end
$var wire 1 w# Read_Data_1 $end
$var reg 1 x# DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 y# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 z# Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 {# Read_Data_2 $end
$var wire 1 |# Read_Data_1 $end
$var reg 1 }# DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 ~# RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 !$ Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 "$ Read_Data_2 $end
$var wire 1 #$ Read_Data_1 $end
$var reg 1 $$ DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 %$ RAM1bit_data $end
$var wire 1 T# Read_Select_1 $end
$var wire 1 U# Read_Select_2 $end
$var wire 1 &$ Write_Data $end
$var wire 1 W# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 '$ Read_Data_2 $end
$var wire 1 ($ Read_Data_1 $end
$var reg 1 )$ DFF $end
$upscope $end
$upscope $end
$scope module ram_row3 $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 9 ,$ Write_Data [8:0] $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 .$ Read_Data_2 [8:0] $end
$var wire 9 /$ Read_Data_1 [8:0] $end
$var wire 9 0$ RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 1$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 2$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 3$ Read_Data_2 $end
$var wire 1 4$ Read_Data_1 $end
$var reg 1 5$ DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 6$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 7$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 8$ Read_Data_2 $end
$var wire 1 9$ Read_Data_1 $end
$var reg 1 :$ DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 ;$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 <$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 =$ Read_Data_2 $end
$var wire 1 >$ Read_Data_1 $end
$var reg 1 ?$ DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 @$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 A$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 B$ Read_Data_2 $end
$var wire 1 C$ Read_Data_1 $end
$var reg 1 D$ DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 E$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 F$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 G$ Read_Data_2 $end
$var wire 1 H$ Read_Data_1 $end
$var reg 1 I$ DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 J$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 K$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 L$ Read_Data_2 $end
$var wire 1 M$ Read_Data_1 $end
$var reg 1 N$ DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 O$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 P$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Q$ Read_Data_2 $end
$var wire 1 R$ Read_Data_1 $end
$var reg 1 S$ DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 T$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 U$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 V$ Read_Data_2 $end
$var wire 1 W$ Read_Data_1 $end
$var reg 1 X$ DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 Y$ RAM1bit_data $end
$var wire 1 *$ Read_Select_1 $end
$var wire 1 +$ Read_Select_2 $end
$var wire 1 Z$ Write_Data $end
$var wire 1 -$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 [$ Read_Data_2 $end
$var wire 1 \$ Read_Data_1 $end
$var reg 1 ]$ DFF $end
$upscope $end
$upscope $end
$scope module ram_row4 $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 9 `$ Write_Data [8:0] $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 b$ Read_Data_2 [8:0] $end
$var wire 9 c$ Read_Data_1 [8:0] $end
$var wire 9 d$ RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 e$ RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 f$ Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 g$ Read_Data_2 $end
$var wire 1 h$ Read_Data_1 $end
$var reg 1 i$ DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 j$ RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 k$ Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 l$ Read_Data_2 $end
$var wire 1 m$ Read_Data_1 $end
$var reg 1 n$ DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 o$ RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 p$ Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 q$ Read_Data_2 $end
$var wire 1 r$ Read_Data_1 $end
$var reg 1 s$ DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 t$ RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 u$ Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 v$ Read_Data_2 $end
$var wire 1 w$ Read_Data_1 $end
$var reg 1 x$ DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 y$ RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 z$ Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 {$ Read_Data_2 $end
$var wire 1 |$ Read_Data_1 $end
$var reg 1 }$ DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 ~$ RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 !% Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 "% Read_Data_2 $end
$var wire 1 #% Read_Data_1 $end
$var reg 1 $% DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 %% RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 &% Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 '% Read_Data_2 $end
$var wire 1 (% Read_Data_1 $end
$var reg 1 )% DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 *% RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 +% Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ,% Read_Data_2 $end
$var wire 1 -% Read_Data_1 $end
$var reg 1 .% DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 /% RAM1bit_data $end
$var wire 1 ^$ Read_Select_1 $end
$var wire 1 _$ Read_Select_2 $end
$var wire 1 0% Write_Data $end
$var wire 1 a$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 1% Read_Data_2 $end
$var wire 1 2% Read_Data_1 $end
$var reg 1 3% DFF $end
$upscope $end
$upscope $end
$scope module ram_row5 $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 9 6% Write_Data [8:0] $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 8% Read_Data_2 [8:0] $end
$var wire 9 9% Read_Data_1 [8:0] $end
$var wire 9 :% RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 ;% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 <% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 =% Read_Data_2 $end
$var wire 1 >% Read_Data_1 $end
$var reg 1 ?% DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 @% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 A% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 B% Read_Data_2 $end
$var wire 1 C% Read_Data_1 $end
$var reg 1 D% DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 E% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 F% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 G% Read_Data_2 $end
$var wire 1 H% Read_Data_1 $end
$var reg 1 I% DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 J% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 K% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 L% Read_Data_2 $end
$var wire 1 M% Read_Data_1 $end
$var reg 1 N% DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 O% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 P% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Q% Read_Data_2 $end
$var wire 1 R% Read_Data_1 $end
$var reg 1 S% DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 T% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 U% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 V% Read_Data_2 $end
$var wire 1 W% Read_Data_1 $end
$var reg 1 X% DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 Y% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 Z% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 [% Read_Data_2 $end
$var wire 1 \% Read_Data_1 $end
$var reg 1 ]% DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 ^% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 _% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 `% Read_Data_2 $end
$var wire 1 a% Read_Data_1 $end
$var reg 1 b% DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 c% RAM1bit_data $end
$var wire 1 4% Read_Select_1 $end
$var wire 1 5% Read_Select_2 $end
$var wire 1 d% Write_Data $end
$var wire 1 7% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 e% Read_Data_2 $end
$var wire 1 f% Read_Data_1 $end
$var reg 1 g% DFF $end
$upscope $end
$upscope $end
$scope module ram_row6 $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 9 j% Write_Data [8:0] $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 l% Read_Data_2 [8:0] $end
$var wire 9 m% Read_Data_1 [8:0] $end
$var wire 9 n% RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 o% RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 p% Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 q% Read_Data_2 $end
$var wire 1 r% Read_Data_1 $end
$var reg 1 s% DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 t% RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 u% Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 v% Read_Data_2 $end
$var wire 1 w% Read_Data_1 $end
$var reg 1 x% DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 y% RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 z% Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 {% Read_Data_2 $end
$var wire 1 |% Read_Data_1 $end
$var reg 1 }% DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 ~% RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 !& Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 "& Read_Data_2 $end
$var wire 1 #& Read_Data_1 $end
$var reg 1 $& DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 %& RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 && Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 '& Read_Data_2 $end
$var wire 1 (& Read_Data_1 $end
$var reg 1 )& DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 *& RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 +& Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ,& Read_Data_2 $end
$var wire 1 -& Read_Data_1 $end
$var reg 1 .& DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 /& RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 0& Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 1& Read_Data_2 $end
$var wire 1 2& Read_Data_1 $end
$var reg 1 3& DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 4& RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 5& Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 6& Read_Data_2 $end
$var wire 1 7& Read_Data_1 $end
$var reg 1 8& DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 9& RAM1bit_data $end
$var wire 1 h% Read_Select_1 $end
$var wire 1 i% Read_Select_2 $end
$var wire 1 :& Write_Data $end
$var wire 1 k% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ;& Read_Data_2 $end
$var wire 1 <& Read_Data_1 $end
$var reg 1 =& DFF $end
$upscope $end
$upscope $end
$scope module ram_row7 $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 9 @& Write_Data [8:0] $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 9 B& Read_Data_2 [8:0] $end
$var wire 9 C& Read_Data_1 [8:0] $end
$var wire 9 D& RAM_row_data [8:0] $end
$scope module cir0thbit $end
$var wire 1 E& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 F& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 G& Read_Data_2 $end
$var wire 1 H& Read_Data_1 $end
$var reg 1 I& DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 J& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 K& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 L& Read_Data_2 $end
$var wire 1 M& Read_Data_1 $end
$var reg 1 N& DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 O& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 P& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Q& Read_Data_2 $end
$var wire 1 R& Read_Data_1 $end
$var reg 1 S& DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 T& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 U& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 V& Read_Data_2 $end
$var wire 1 W& Read_Data_1 $end
$var reg 1 X& DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 Y& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 Z& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 [& Read_Data_2 $end
$var wire 1 \& Read_Data_1 $end
$var reg 1 ]& DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 ^& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 _& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 `& Read_Data_2 $end
$var wire 1 a& Read_Data_1 $end
$var reg 1 b& DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 c& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 d& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 e& Read_Data_2 $end
$var wire 1 f& Read_Data_1 $end
$var reg 1 g& DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 h& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 i& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 j& Read_Data_2 $end
$var wire 1 k& Read_Data_1 $end
$var reg 1 l& DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 m& RAM1bit_data $end
$var wire 1 >& Read_Select_1 $end
$var wire 1 ?& Read_Select_2 $end
$var wire 1 n& Write_Data $end
$var wire 1 A& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 o& Read_Data_2 $end
$var wire 1 p& Read_Data_1 $end
$var reg 1 q& DFF $end
$upscope $end
$upscope $end
$upscope $end
$scope module RF_circuit1 $end
$var wire 3 r& InD [2:0] $end
$var wire 1 1 InE $end
$var wire 3 s& OutD [2:0] $end
$var wire 3 t& R0 [2:0] $end
$var wire 3 u& R1 [2:0] $end
$var wire 3 v& R2 [2:0] $end
$var wire 3 w& R3 [2:0] $end
$var wire 2 x& RA [1:0] $end
$var wire 2 y& RB [1:0] $end
$var wire 1 J RE $end
$var wire 2 z& WR [1:0] $end
$var wire 3 {& WRD [2:0] $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 3 |& R11 [2:0] $end
$var wire 3 }& R10 [2:0] $end
$var wire 3 ~& R01 [2:0] $end
$var wire 3 !' R00 [2:0] $end
$var reg 3 "' A [2:0] $end
$var reg 3 #' B [2:0] $end
$var reg 4 $' WR_SEL [3:0] $end
$scope module Reg00 $end
$var wire 3 %' Din [2:0] $end
$var wire 1 &' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 3 '' Dout [2:0] $end
$scope module cir1stbit $end
$var wire 1 (' Din $end
$var wire 1 )' Dout $end
$var wire 1 &' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 )' DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 *' Din $end
$var wire 1 +' Dout $end
$var wire 1 &' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 +' DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 ,' Din $end
$var wire 1 -' Dout $end
$var wire 1 &' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 -' DFF $end
$upscope $end
$upscope $end
$scope module Reg01 $end
$var wire 3 .' Din [2:0] $end
$var wire 1 /' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 3 0' Dout [2:0] $end
$scope module cir1stbit $end
$var wire 1 1' Din $end
$var wire 1 2' Dout $end
$var wire 1 /' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 2' DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 3' Din $end
$var wire 1 4' Dout $end
$var wire 1 /' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 4' DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 5' Din $end
$var wire 1 6' Dout $end
$var wire 1 /' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 6' DFF $end
$upscope $end
$upscope $end
$scope module Reg10 $end
$var wire 3 7' Din [2:0] $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 3 8' Dout [2:0] $end
$scope module cir1stbit $end
$var wire 1 9' Din $end
$var wire 1 :' Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 :' DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 ;' Din $end
$var wire 1 <' Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 <' DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 =' Din $end
$var wire 1 >' Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 >' DFF $end
$upscope $end
$upscope $end
$scope module Reg11 $end
$var wire 3 ?' Din [2:0] $end
$var wire 1 @' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 3 A' Dout [2:0] $end
$scope module cir1stbit $end
$var wire 1 B' Din $end
$var wire 1 C' Dout $end
$var wire 1 @' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 C' DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 D' Din $end
$var wire 1 E' Dout $end
$var wire 1 @' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 E' DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 F' Din $end
$var wire 1 G' Dout $end
$var wire 1 @' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 G' DFF $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0G'
0F'
0E'
0D'
0C'
0B'
b0 A'
0@'
b0 ?'
0>'
0='
0<'
0;'
0:'
09'
b0 8'
b0 7'
06'
05'
04'
03'
02'
01'
b0 0'
0/'
b0 .'
0-'
0,'
0+'
0*'
0)'
0('
b0 ''
1&'
b0 %'
b1 $'
b0 #'
b0 "'
b0 !'
b0 ~&
b0 }&
b0 |&
b0 {&
b0 z&
b0 y&
b0 x&
b0 w&
b0 v&
b0 u&
b0 t&
b0 s&
b0 r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
b0 D&
b0 C&
b0 B&
0A&
b0 @&
0?&
1>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
b0 n%
b0 m%
b0 l%
0k%
b0 j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
b0 :%
b0 9%
b0 8%
07%
b0 6%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
b0 d$
b0 c$
b0 b$
0a$
b0 `$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
b0 0$
b0 /$
b0 .$
0-$
b0 ,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
b0 Z#
b0 Y#
b0 X#
0W#
b0 V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
b0 &#
b0 %#
b0 $#
0##
b0 "#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
b0 P"
b0 O"
b0 N"
0M"
b0 L"
0K"
0J"
b0 I"
b0 H"
b10000000 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
bz *"
b111 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b111 ~
b111 }
b0 |
0{
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
0o
b0 n
b0 m
0l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
0d
b0 c
1b
b0 a
0`
b0 _
b0 ^
b0 ]
b0 \
b111 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
1J
0I
0H
b0 G
b0 F
b0 E
0D
1C
0B
0A
0@
b0 ?
b0 >
b0 =
b0 <
b0 ;
b111 :
b0 9
08
17
06
05
b0 4
b0 3
02
01
b0 0
b0 /
b111 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
16
#10
06
07
#15
16
#20
1M"
1\"
1u"
1z"
12#
1K#
1P#
1f#
1!$
1&$
1<$
1U$
1Z$
1p$
1+%
10%
1F%
1_%
1d%
1z%
15&
1:&
1P&
1i&
1n&
b1 I"
b110000100 E
b110000100 ."
b110000100 L"
b110000100 "#
b110000100 V#
b110000100 ,$
b110000100 `$
b110000100 6%
b110000100 j%
b110000100 @&
1D
1='
06
b110000100 4
b110000100 =
15
11
b100 0
b100 9
b100 r&
b100 7'
#25
1y"
1}"
1t"
1x"
b110000100 ,
b110000100 W
b110000100 !"
b110000100 F"
b110000100 P"
1["
1_"
16
#30
0M"
1##
1k"
0u"
0z"
1A#
0K#
0P#
1u#
0!$
0&$
1K$
0U$
0Z$
1!%
0+%
00%
1U%
0_%
0d%
1+&
05&
0:&
1_&
0i&
0n&
b10 I"
b100100 E
b100100 ."
b100100 L"
b100100 "#
b100100 V#
b100100 ,$
b100100 `$
b100100 6%
b100100 j%
b100100 @&
b1 F
b1 -"
06
b100100 4
b100100 =
b1 3
b1 <
#35
11#
15#
b100100 +
b100100 V
b100100 ""
b100100 E"
b100100 &#
1@#
1D#
16
#40
0##
1W#
1R"
0k"
1u"
1(#
0A#
1K#
1\#
0u#
1!$
12$
0K$
1U$
1f$
0!%
1+%
1<%
0U%
1_%
1p%
0+&
15&
1F&
0_&
1i&
b100 I"
b10000101 E
b10000101 ."
b10000101 L"
b10000101 "#
b10000101 V#
b10000101 ,$
b10000101 `$
b10000101 6%
b10000101 j%
b10000101 @&
b10 F
b10 -"
06
b10000101 4
b10000101 =
b10 3
b10 <
#45
1~#
1$$
1e#
1i#
b10000101 *
b10000101 U
b10000101 #"
b10000101 D"
b10000101 Z#
1[#
1_#
16
#50
0W#
1-$
0R"
1W"
0\"
1p"
0u"
0(#
1-#
02#
1F#
0K#
0\#
1a#
0f#
1z#
0!$
02$
17$
0<$
1P$
0U$
0f$
1k$
0p$
1&%
0+%
0<%
1A%
0F%
1Z%
0_%
0p%
1u%
0z%
10&
05&
0F&
1K&
0P&
1d&
0i&
b1000 I"
b1000010 E
b1000010 ."
b1000010 L"
b1000010 "#
b1000010 V#
b1000010 ,$
b1000010 `$
b1000010 6%
b1000010 j%
b1000010 @&
b11 F
b11 -"
06
b1000010 4
b1000010 =
b11 3
b11 <
#55
16$
1:$
b1000010 )
b1000010 T
b1000010 $"
b1000010 C"
b1000010 0$
1O$
1S$
16
#60
0-$
1a$
0W"
1a"
1f"
0p"
1u"
1z"
0-#
17#
1<#
0F#
1K#
1P#
0a#
1k#
1p#
0z#
1!$
1&$
07$
1A$
1F$
0P$
1U$
1Z$
0k$
1u$
1z$
0&%
1+%
10%
0A%
1K%
1P%
0Z%
1_%
1d%
0u%
1!&
1&&
00&
15&
1:&
0K&
1U&
1Z&
0d&
1i&
1n&
b10000 I"
b110011000 E
b110011000 ."
b110011000 L"
b110011000 "#
b110011000 V#
b110011000 ,$
b110011000 `$
b110011000 6%
b110011000 j%
b110011000 @&
b100 F
b100 -"
06
b110011000 4
b110011000 =
b100 3
b100 <
#65
1/%
13%
1*%
1.%
1y$
1}$
b110011000 (
b110011000 S
b110011000 %"
b110011000 B"
b110011000 d$
1t$
1x$
16
#70
0a$
17%
1R"
1W"
1\"
0f"
0u"
0z"
1(#
1-#
12#
0<#
0K#
0P#
1\#
1a#
1f#
0p#
0!$
0&$
12$
17$
1<$
0F$
0U$
0Z$
1f$
1k$
1p$
0z$
0+%
00%
1<%
1A%
1F%
0P%
0_%
0d%
1p%
1u%
1z%
0&&
05&
0:&
1F&
1K&
1P&
0Z&
0i&
0n&
b100000 I"
b1111 E
b1111 ."
b1111 L"
b1111 "#
b1111 V#
b1111 ,$
b1111 `$
b1111 6%
b1111 j%
b1111 @&
b101 F
b101 -"
06
b1111 4
b1111 =
b101 3
b101 <
#75
1;%
1?%
1@%
1D%
1E%
1I%
b1111 '
b1111 R
b1111 &"
b1111 A"
b1111 :%
1J%
1N%
16
#80
07%
1k%
0R"
0\"
0a"
1z"
0(#
02#
07#
1P#
0\#
0f#
0k#
1&$
02$
0<$
0A$
1Z$
0f$
0p$
0u$
10%
0<%
0F%
0K%
1d%
0p%
0z%
0!&
1:&
0F&
0P&
0U&
1n&
b1000000 I"
b100000010 E
b100000010 ."
b100000010 L"
b100000010 "#
b100000010 V#
b100000010 ,$
b100000010 `$
b100000010 6%
b100000010 j%
b100000010 @&
b110 F
b110 -"
06
b100000010 4
b100000010 =
b110 3
b110 <
#85
19&
1=&
b100000010 &
b100000010 Q
b100000010 '"
b100000010 @"
b100000010 n%
1t%
1x%
16
#90
0k%
b0 I"
0D
06
12
05
#95
0C
1I
1,'
15'
1F'
b100 Y
b100 n
b100 {&
b100 %'
b100 .'
b100 ?'
b100 s
b100 j
b100 q
b100 r
0b
b100 e
b100 h
b100 p
b100 u
b100 >
b100 f
b100 #'
b100 a
b100 c
b10 O
b10 y&
b1100 ]
b1100 y
b110000100 -
b110000100 ;
b110000100 Z
b110000100 +"
1^"
1w"
b110000100 >"
b110000100 O"
1|"
1J"
0>&
b1 _
b1 |
b1 G"
b100 "
b100 L
b100 v&
b100 }&
b100 8'
1>'
1@
b0 .
b0 :
b0 [
b0 }
b0 ~
b0 )"
18
16
#100
08
06
#105
0&'
b0 $'
0J
1o
1b
b1 ^
b1 k
b1 z
b1 ]
b1 y
b100100 -
b100100 ;
b100100 Z
b100100 +"
1C
0I
0,'
05'
0F'
0^"
0w"
b0 >"
b0 O"
0|"
14#
b100100 ="
b100100 %#
1C#
1d
b0 Y
b0 n
b0 {&
b0 %'
b0 .'
b0 ?'
0J"
1~"
b10 _
b10 |
b0 j
b0 q
1l
b100 i
b100 x
b10 G"
b100 ?
b100 g
b100 m
b100 t
b100 w
b100 "'
b1 .
b1 :
b1 [
b1 }
b1 ~
b1 )"
0@
1A
b100 $
b100 N
b100 t&
b100 !'
b100 ''
1-'
18
16
#110
08
06
#115
1`
0o
b100 s
b0 ^
b0 k
b0 z
b0 v
0b
b100 e
b100 h
b100 p
b100 u
b101 a
b101 c
b100 ]
b100 y
b10000101 -
b10000101 ;
b10000101 Z
b10000101 +"
04#
b0 ="
b0 %#
0C#
1^#
1h#
b10000101 <"
b10000101 Y#
1#$
0~"
1T#
b101 _
b101 |
b100 G"
1@
0A
1B
1{
b10 .
b10 :
b10 [
b10 }
b10 ~
b10 )"
18
16
#120
08
06
#125
1('
1*'
11'
13'
1B'
1D'
1/'
b11 v
b10 $'
0C
0`
1J
1b
b1 s
1I
1,'
15'
1F'
b0 ]
b0 y
b111 r
0d
b111 Y
b111 n
b111 {&
b111 %'
b111 .'
b111 ?'
b110 _
b110 |
b111 e
b111 h
b111 p
b111 u
b111 j
b111 q
0l
b0 i
b0 x
b0 >
b0 f
b0 #'
b0 ?
b0 g
b0 m
b0 t
b0 w
b0 "'
b111 a
b111 c
b11 O
b11 y&
b1 X
b1 x&
b1 G
b1 z&
b1111 -
b1111 ;
b1111 Z
b1111 +"
0^#
0h#
b0 <"
b0 Y#
0#$
1>%
1C%
1H%
b1111 9"
b1111 9%
1M%
0T#
14%
b100000 G"
b101 .
b101 :
b101 [
b101 }
b101 ~
b101 )"
18
16
#130
08
06
#135
1A&
0I
0,'
05'
0F'
0W"
0-#
0a#
07$
0k$
0A%
0u%
0K&
0M"
0&'
0/'
b10000000 I"
0R"
1\"
0z"
0(#
12#
0P#
0\#
1f#
0&$
02$
1<$
0Z$
0f$
1p$
00%
0<%
1F%
0d%
0p%
1z%
0:&
0F&
1P&
0n&
0J
b111 >
b111 f
b111 #'
b0 $'
0b
1D
b111 F
b111 -"
b100 E
b100 ."
b100 L"
b100 "#
b100 V#
b100 ,$
b100 `$
b100 6%
b100 j%
b100 @&
b10 a
b10 c
b1 O
b1 y&
b0 X
b0 x&
b0 G
b0 z&
1H
b1000 ]
b1000 y
b100000010 -
b100000010 ;
b100000010 Z
b100000010 +"
1('
11'
1B'
1d
b11 Y
b11 n
b11 {&
b11 %'
b11 .'
b11 ?'
0>%
0C%
0H%
b0 9"
b0 9%
0M%
1w%
b100000010 8"
b100000010 m%
1<&
b11 j
b11 q
1l
b100 i
b100 x
04%
1h%
b111 _
b111 |
b100 ?
b100 g
b100 m
b100 t
b100 w
b100 "'
b1000000 G"
16'
14'
b111 #
b111 M
b111 u&
b111 ~&
b111 0'
12'
0@
1A
0B
0{
b110 .
b110 :
b110 [
b110 }
b110 ~
b110 )"
18
16
#140
08
06
#145
1C
1&'
0I
0('
0*'
0,'
01'
03'
05'
0B'
0D'
0F'
b1 $'
b0 Y
b0 n
b0 {&
b0 %'
b0 .'
b0 ?'
1d
1W"
0\"
1z"
1-#
02#
1P#
1a#
0f#
1&$
17$
0<$
1Z$
1k$
0p$
10%
1A%
0F%
1d%
1u%
0z%
1:&
1K&
0P&
1n&
1J
b100 s
b0 j
b0 q
1l
0M"
0A&
1b
0D
b100000010 E
b100000010 ."
b100000010 L"
b100000010 "#
b100000010 V#
b100000010 ,$
b100000010 `$
b100000010 6%
b100000010 j%
b100000010 @&
b100 r
b0 v
b0 I"
0H
b100 e
b100 h
b100 p
b100 u
b110 F
b110 -"
b0 ]
b0 y
b100 >
b100 f
b100 #'
b100 a
b100 c
b10 O
b10 y&
b100 -
b100 ;
b100 Z
b100 +"
0w%
b0 8"
b0 m%
0<&
b100 7"
b100 C&
1R&
0h%
1>&
b0 _
b0 |
b10000000 G"
b111 .
b111 :
b111 [
b111 }
b111 ~
b111 )"
0A
1B
1{
b100 %
b100 P
b100 ("
b100 ?"
b100 D&
1O&
1S&
18
16
#150
08
06
